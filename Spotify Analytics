# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 
    

--#1)Rank artists based on popularity
SELECT artist_name, track_name, popularity
FROM Spotifydata
ORDER BY popularity DESC;

--#2)What is the average danceability per artist?
SELECT distinct artist_name as Artist, AVG(danceability) as AVG_Danceability
FROM Spotifydata
GROUP BY artist_name;

--#3)Which artist averaged the highest energy?
SELECT artist_name as Artist,track_name, energy
FROM Spotifydata
ORDER BY energy DESC LIMIT 10;

--#4)Which song has the slowest tempo?
SELECT artist_name,track_name, MIN(tempo)
FROM Spotifydata;

--#5)Which artist appeared the most?
SELECT Distinct artist_name, COUNT(artist_name) as Appearances
FROM Spotifydata
GROUP BY artist_name
ORDER BY Appearances DESC;

--#6)What's the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name
